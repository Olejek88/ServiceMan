apply plugin: 'com.android.application'
// Realm support
apply plugin: 'realm-android'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "ru.shtrm.serviceman"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        multiDexEnabled true
        signingConfig signingConfigs.debug
    }

    signingConfigs {
        def rootDir = property('rootDir')
        Properties properties = new Properties()
        properties.load(new FileInputStream("${rootDir}/local.properties"))
        debug {
            // это сделано для того, чтоб не прибивать приложение вместе с базой
            // при установке release версии приложения
            storeFile file(properties.getProperty('STORE_FILE'))
            storePassword properties.getProperty('STORE_PASSWORD')
            keyAlias properties.getProperty('KEY_ALIAS')
            keyPassword properties.getProperty('KEY_PASSWORD')
        }
        release {
            storeFile file(properties.getProperty('STORE_FILE'))
            storePassword properties.getProperty('STORE_PASSWORD')
            keyAlias properties.getProperty('KEY_ALIAS')
            keyPassword properties.getProperty('KEY_PASSWORD')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            versionNameSuffix "debug"
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        abortOnError false
    }

//    flavorDimensions "common"
//    productFlavors {
//        arm {
//            dimension "common"
//            ndk.abiFilters "armeabi-v7a"
//        }
//    }
}

def rd = property('rootDir')
Properties prop = new Properties()
prop.load(new FileInputStream("${rd}/local.properties"))
def localRepo = prop.getProperty('localRepo')

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "file://${localRepo}"
    }
}

ext {
    supportLibVersion = '27.0.2'
    rxjavaVersion = '2.0.1'
    retrofitVersion = '2.2.0'
    datetimePickerVersion = '3.1.3'
    circleimageviewVersion = '2.1.0'
    espressoVersion = '2.2.2'
    runnerRulesVersion = '0.5'
    junitVersion = '4.12'
    mockitoVersion = '2.0.2-beta'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Support libraries
    //noinspection GradleDependency
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    //noinspection GradleDependency
    //implementation "com.android.support:recyclerview-v7:27.0.1"
    //noinspection GradleDependency
    implementation "com.android.support:support-v4:$supportLibVersion"
    //noinspection GradleDependency
    implementation "com.android.support:design:$supportLibVersion"
    //noinspection GradleDependency
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    //noinspection GradleDependency
    implementation "com.android.support:preference-v14:$supportLibVersion"
    //noinspection GradleDependency
    implementation "com.android.support:customtabs:$supportLibVersion"

    // Retrofit series
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    // Material date time picker
    implementation("com.wdullaer:materialdatetimepicker:$datetimePickerVersion"){
        exclude group:'com.android.support'
    }
    // CircleImageView
    implementation("de.hdodenhof:circleimageview:$circleimageviewVersion"){
        exclude group:'com.android.support'
    }

    // chart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    // badge
    implementation 'me.leolin:ShortcutBadger:1.1.19@aar'

    testImplementation "junit:junit:$junitVersion"

    // Stetho
    implementation "com.facebook.stetho:stetho:1.5.0"
    implementation "com.uphyca:stetho_realm:2.1.0"

    // OSM
    implementation "org.osmdroid:osmdroid-android:6.0.1"

    // Widgets
    implementation 'com.sothree.slidinguppanel:library:3.4.0'

    // Espresso
    androidTestImplementation "com.android.support:support-annotations:$supportLibVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$espressoVersion") {
        exclude group: 'com.android.support'
    }
    androidTestImplementation("com.android.support.test.espresso:espresso-intents:$espressoVersion") {
        exclude group: 'com.android.support'
    }

    implementation 'io.realm:android-adapters:2.1.0'

    // Runner and rules
    androidTestImplementation "com.android.support.test:runner:$runnerRulesVersion"
    androidTestImplementation "com.android.support.test:rules:$runnerRulesVersion"
    
    // Drivers
    implementation 'me.dm7.barcodescanner:zbar:1.8.3'
    implementation 'android.hardware:uhf-tools:1.0@aar'
    implementation 'android.hardware.p6300:p6300uart:1.0@aar'
    implementation 'com.google.zxing:core:3.2.0'
    implementation 'com.google.zxing:android-integration:3.2.0'
//    implementation 'com.google.code.gson:gson:2.8.0'
}
